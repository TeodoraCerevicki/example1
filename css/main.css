@-webkit-keyframes pulse{0%{transform:scale(.1);opacity:0}50%{opacity:1}to{transform:scale(1.2);opacity:0}}@keyframes pulse{0%{transform:scale(.1);opacity:0}50%{opacity:1}to{transform:scale(1.2);opacity:0}}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}@keyframes rotate{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}@-webkit-keyframes placeHolderShimmer{0%{background-position:-468px 0}to{background-position:468px 0}}@keyframes placeHolderShimmer{0%{background-position:-468px 0}to{background-position:468px 0}}@-webkit-keyframes searchFieldSlide{0%{width:205px}to{width:0}}@keyframes searchFieldSlide{0%{width:205px}to{width:0}}@font-face{font-family:OpenSans-Regular;src:url(../fonts/open-sans/OpenSans-Regular.ttf)}@font-face{font-family:handwritten;src:url(../fonts/Kalam/Kalam-Regular.ttf)}*,:after,:before{box-sizing:border-box}html{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:rgba(0,0,0,0)}@-ms-viewport{width:device-width}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-size:16px;font-weight:400;line-height:1.6;color:#000;text-align:left;background-color:#fff}[tabindex="-1"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}p{margin-top:0;margin-bottom:12px}ol,ul{margin:0;padding:0}b,strong{font-weight:bolder}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#000;text-decoration:none}img{vertical-align:middle;border-style:none;max-width:100%}svg:not(:root){overflow:hidden}table{border-collapse:collapse}th{text-align:inherit}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}[hidden]{display:none!important}button:focus,input:focus{outline:none}h1,h2,h3,h4,h5,h6{color:#000;font-weight:700;line-height:1.2;margin-top:0;margin-bottom:0}h1{font-size:25px;font-weight:500;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol}@media screen and (min-width:768px){h1{font-size:35px}}@media screen and (min-width:1200px){h1{font-size:35px}}h2{font-size:32px;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;color:#212529}@media screen and (min-width:768px){h2{font-size:32px}}@media screen and (min-width:1200px){h2{font-size:32px}}h3{font-size:28px;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;color:#212529;text-transform:none}@media screen and (min-width:768px){h3{font-size:28px}}@media screen and (min-width:1200px){h3{font-size:28px}}h4{font-size:22px;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;color:#212529;text-transform:none}@media screen and (min-width:768px){h4{font-size:22px}}@media screen and (min-width:1200px){h4{font-size:22px}}h5{font-size:20px}@media screen and (min-width:768px){h5{font-size:20px}}@media screen and (min-width:1200px){h5{font-size:20px}}h6{font-size:16px}@media screen and (min-width:768px){h6{font-size:16px}}@media screen and (min-width:1200px){h6{font-size:16px}}small{font-size:80%;font-weight:400}a:hover{text-decoration:none}li{list-style:none}body{color:#4a4a4a}.block-scroll{overflow:hidden}.header img{width:100%}.hide{display:none}.active,.d-block{display:block}@media screen and (max-width:767px){.hideOnMobile{display:none}}.active-flex{display:flex}a{color:#4a4a4a;transition:.3}a:hover{color:inherit;text-decoration:underline}.c-pointer{cursor:pointer}.a-loader{position:fixed;top:0;right:0;bottom:0;left:0;z-index:10;background-color:rgba(0,0,0,.7)}.a-loader__circle{position:absolute;top:50%;right:unset;bottom:unset;left:50%;display:flex;justify-content:center;align-items:center;width:60px;height:60px;border-radius:50%;background-color:#000;transform:translate(-50%,-50%)}.a-loader__circle:after{-webkit-animation:pulse 2s ease-out infinite;animation:pulse 2s ease-out infinite;content:"";height:50px;width:50px;border-radius:50%;border:5px solid #fff;background:transparent;opacity:0}.a-overlay{position:absolute;top:0;right:0;bottom:0;left:0;background:rgba(0,0,0,.8);z-index:0}.a-title{position:relative;display:inline-block;font-family:handwritten;color:#212529}.a-title__inner{width:90%;margin:0 auto;text-align:center}@media screen and (min-width:768px){.a-title__inner{width:60%}}.a-link{color:#4a4a4a;display:block;font-size:18px;transition:.3s}.a-link:hover{color:#448777}.a-link.-homeCutText{display:block;text-align:right}@media screen and (min-width:768px){.a-link.-homeCutText{display:none}}.a-link.-openLink{position:relative;display:inline-block;margin:25px 50px}.a-link.-openLink .material-icons{position:absolute;top:unset;right:-10px;bottom:-15px;left:unset;font-size:32px}.a-link.-openLink:hover{text-decoration:none}.a-desc{margin-top:15px;font-size:17px;line-height:1.5}.a-desc.-homeCutText{display:-webkit-box;-webkit-line-clamp:8;-webkit-box-orient:vertical;overflow:hidden}@media screen and (min-width:768px){.a-desc.-homeCutText{-webkit-line-clamp:unset}}.a-date{background-color:#fdbb2d;border-radius:5px;padding:15px 30px;text-align:center}.a-date__num{color:#fff;display:block;font-size:30px;font-weight:700}.a-date__month{color:#fff;font-size:14px;text-transform:uppercase;display:block}@media screen and (max-width:767px){.a-date.-offset{position:absolute;top:-23px;display:inline-block;padding:10px 15px}.a-date.-offset .a-date__num{font-size:25px;line-height:1}}.a-video{width:100%;height:auto;margin-top:40px}@media screen and (min-width:768px){.a-video{height:600px}}.a-btn{display:block;padding:10px 5px;border-radius:5px;border:2px solid #fdbb2d;background:#fdbb2d;font-weight:700;text-align:center;color:#fff;transition:.3s}@media screen and (min-width:768px){.a-btn{padding:20px}}.a-btn:hover{background:hsla(0,0%,100%,.8);color:#fdbb2d;text-decoration:none}.a-btn.-formLink{margin-top:40px;font-size:20px}.a-btn.-smaller{margin-top:10px;padding:10px 20px}.a-btn.-secondary{border-color:#b4ded4;background:#b4ded4}.a-btn.-secondary:hover{border-color:transparent;background:#448777;color:#fff}.a-closeIcon{position:absolute;top:5px;right:5px;width:30px;height:30px;cursor:pointer}.a-closeIcon:after,.a-closeIcon:before{position:absolute;top:0;right:0;content:"";width:20px;height:20px;border-bottom:2px solid #212529;transition:.3s}.a-closeIcon:before{transform:rotate(45deg)}.a-closeIcon:after{transform:rotate(-45deg);right:13px}.a-closeIcon:hover:after,.a-closeIcon:hover:before{border-bottom:2px solid #b04e4e}.a-burger{width:30px}.a-burger span{display:block;height:9px;border-bottom:2px solid #fff;transition:.3s}.a-burger.open span:first-child{transform:rotate(45deg)}.a-burger.open span:nth-child(2){position:relative;top:-9px;right:5px;transform:rotate(-45deg)}.a-burger.open span:last-child{display:none}@media screen and (min-width:992px){.a-burger{display:none}}.a-arrow{border:solid #000;border-width:0 3px 3px 0;display:inline-block}.a-arrow.-right{transform:rotate(-45deg)}.a-arrow.l-eft{transform:rotate(135deg)}.a-arrow.-up{transform:rotate(-135deg)}.a-arrow.-down{transform:rotate(45deg)}.a-arrow.-lang{position:absolute;top:7px;right:3px;bottom:unset;left:unset;height:10px;width:10px;border-width:0 2px 2px 0;border-color:#fff}.a-toTopArrow{background-color:rgba(0,0,0,.5);position:fixed;bottom:9%;right:5px;z-index:1000;display:none;width:50px;height:50px;border-radius:5px;cursor:pointer}.a-toTopArrow .a-arrow{position:absolute;top:20px;left:16px;width:20px;height:20px;border-color:#fdbb2d;transform:rotate(-135deg)}.a-highlight{position:relative}.a-highlight:before{content:"";background-color:#b4ded4;width:100%;height:100%;position:absolute;filter:url(#marker-shape);left:-.25em;top:-1px;padding:15px 40px}.a-highlight span{z-index:1;position:relative}.scroll-bar-wrap{position:relative}.scroll-bar-wrap .scroll-box{width:100%;height:100%;overflow-y:scroll}.scroll-bar-wrap .scroll-box::-webkit-scrollbar{width:.4em}.scroll-bar-wrap .scroll-box::-webkit-scrollbar .scroll-bar-wrap .scroll-box::-webkit-scrollbar-thumb{overflow:visible;border-radius:4px}.scroll-bar-wrap .scroll-box::-webkit-scrollbar-thumb .scroll-box::-webkit-scrollbar-thumb{background:rgba(0,0,0,.2)}.scroll-bar-wrap .cover-bar{position:absolute;background:#fff;height:100%;top:0;right:0;width:.4em;transition:all .5s;opacity:1}.scroll-bar-wrap:hover .cover-bar{opacity:0;transition:all .5s}.m-block{margin-top:50px;padding:15px}.m-block:first-child{margin-top:0}@media screen and (min-width:768px){.m-block{padding:50px}}.m-card{position:relative;padding:30px;box-shadow:0 15px 10px rgba(0,0,0,.2);text-align:center;background-color:rgba(253,187,45,.92)}.m-card__icon{height:24px}.m-card__title{margin:18px 0;display:block;font-size:16px;font-weight:600;color:#000;text-transform:uppercase}.m-card:hover{text-decoration:none}.m-card:nth-child(2){background-color:rgba(78,160,176,.9)}.m-card:nth-child(3){background-color:rgba(180,222,212,.7)}.m-card:nth-child(4){background-color:rgba(176,78,78,.5)}@media screen and (min-width:768px){.m-card{margin:0 15px}}.m-card__wrap{display:flex;flex-wrap:wrap;align-items:flex-start}.m-card__wrap.-home .m-card{width:90%;margin-right:auto;margin-left:auto}@media screen and (min-width:768px){.m-card__wrap.-home .m-card{max-width:260px;margin:0 15px}}.m-card__wrap.-members{align-items:flex-start;justify-content:space-around;background:none}.m-card__wrap.-members .m-card{width:350px;height:450px;padding:30px 0 0;border:4px solid #4a4a4a;background-color:transparent}.m-card__wrap.-members .m-card>*{padding:5px 30px}.m-card__wrap.-members .m-card__img{position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1;overflow:hidden;padding:0}.m-card__wrap.-members .m-card__info{position:absolute;top:unset;right:30px;bottom:-4px;left:30px;padding:0;border:4px solid #4a4a4a;border-bottom:0}.m-card__wrap.-members .m-card__info.-open{left:-3px;right:-3px}.m-card__wrap.-members .m-card__contact,.m-card__wrap.-members .m-card__title{margin:0;background-color:#fdbb2d;color:#fff;text-transform:none}.m-card__wrap.-members .m-card__name{display:block;padding:10px 0;background-color:#eee;font-family:handwritten;font-weight:600;font-size:20px}.m-card__wrap.-members .m-card__about{display:none;margin:0;max-height:332px;overflow:auto;padding:15px 30px;border-top:1px solid #a3a3a3;background-color:#fff}.m-card__wrap.-members .m-card__contact{margin-top:0;padding:5px 0;border-top:1px solid #a3a3a3}.m-card__wrap.-members .m-card__link{padding:15px;color:#fff;cursor:pointer}.m-card__wrap.-members .m-card__link:hover{color:#000}.m-card__wrap.-blog{justify-content:center}.m-card__wrap.-blog .m-card{position:relative;overflow:hidden;z-index:1;display:flex;align-items:flex-end;width:90%;max-width:350px;height:400px;margin-top:30px;padding:0;background-color:transparent;transition:.3s}@media screen and (min-width:768px){.m-card__wrap.-blog .m-card{height:500px}}.m-card__wrap.-blog .m-card img{padding:0;position:absolute;bottom:0;z-index:-1}.m-card__wrap.-blog .m-card__info{width:90%;margin:0 auto;padding-bottom:10px;background:#fff}.m-card__wrap.-blog .m-card__title{font-family:handwritten;font-size:20px;font-weight:500;text-transform:unset}.m-card__wrap.-blog .m-card .a-desc{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;font-size:15px}.m-card__wrap.-blog .m-card:hover{transform:scale(1.05);color:#000}.m-activity{position:relative;width:80%;margin:50px auto 0;padding-bottom:25px;border-bottom:1px solid #eee;background-color:#fff;cursor:pointer}@media screen and (min-width:768px){.m-activity{margin-top:40px}}.m-activity:last-child{border-bottom:none}.m-activity:hover{text-decoration:none}.m-activity.a-link{transition:.3s}.m-activity.a-link:hover{color:#fdbb2d}.m-activity__img{width:auto;overflow:hidden}@media screen and (min-width:768px){.m-activity__img{max-width:200px}}.m-activity__img img{width:100%}.m-activity__text{padding:20px 10px 0}.m-activity__title{color:#000}.m-activity .a-desc{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;font-size:15px}@media screen and (min-width:768px){.m-activity{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:nowrap}.m-activity__text{padding:0 40px}}.m-nav{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:wrap;position:fixed;top:0;right:0;bottom:unset;left:0;background-color:rgba(0,0,0,.7);z-index:100;padding:0 20px}.m-nav__logo{max-width:180px}.m-nav .m-nav__wrap{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:wrap}@media screen and (max-width:991px){.m-nav .m-nav__wrap{position:absolute;top:51px;right:0;bottom:unset;left:0;z-index:1;height:100vh;display:none;padding:20px 0;background:rgba(0,0,0,.85);text-align:center}.m-nav .m-nav__wrap .m-nav__list{flex-direction:column;align-items:center}}.m-nav__list{display:flex}.m-nav__list li{width:100%;border-bottom:1px solid #fff;padding:10px 20px;color:#fff;transition:.3s}.m-nav__list li:hover{background-color:#fdbb2d;color:#000}@media screen and (min-width:992px){.m-nav__list li{width:unset;border:none}}.m-nav__list .a-link{color:#fff}.m-nav__list .a-link:hover{text-decoration:none}.m-nav__list .-active{background-color:#fdbb2d;color:#000}@media screen and (min-width:992px){.m-nav__list .-active{border-bottom:5px solid #fdbb2d;background-color:unset;color:#fdbb2d}}.m-testimonials{margin-top:100px}.m-testimonials__item{position:relative;display:block;width:100%;height:auto;margin:50px auto 0;background:#fff;padding:60px 30px;border:5px dashed #b4ded4;text-align:center;box-shadow:0 15px 10px rgba(0,0,0,.2)}.m-testimonials__item:before{background-size:cover;background-position:top;background-repeat:no-repeat;position:absolute;top:-40px;right:unset;bottom:unset;left:-16px;content:"";display:block;height:90px;width:60px;background-image:url(../images/icons/quote.svg);transform:rotateY(180deg)}@media screen and (min-width:768px){.m-testimonials__item{width:400px;height:350px}}.m-testimonials__user{display:block;margin:15px 0 20px;font-family:handwritten;font-size:25px;font-weight:700;color:#b4ded4}.m-tab{display:flex;align-items:center;border-bottom:4px solid #b4ded4;background:#e6e5eb}.m-tab__item{padding:10px 10px 5px;font-size:15px;cursor:pointer;transition:.3s}.m-tab__item.-active,.m-tab__item:hover{background:#b4ded4}@media screen and (min-width:768px){.m-tab__item{padding:10px 15px;font-size:20px}}.m-popup{position:fixed;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;z-index:99;display:none;padding:20px;background:hsla(0,0%,63.9%,.65)}.m-popup.-active{display:flex}.m-popup__box{width:100%;height:500px;overflow-y:auto;position:relative;padding:20px 10px;border:1px solid #b4ded4;border-radius:10px;background-color:#fff}@media screen and (min-width:768px){.m-popup__box{width:unset;height:unset;padding:50px}}.m-form{display:flex;flex-wrap:wrap;flex-direction:column;max-width:700px}@media screen and (min-width:992px){.m-form{flex-direction:row}}.m-form>div{flex:1 1 0;margin:0 15px}.m-form__box{margin-top:25px}@media screen and (min-width:768px){.m-form__box{width:300px}}.m-form__box textarea{min-width:230px;width:100%}.m-form label{display:block}.m-form .-required:after{content:"(obavezno)";color:#b04e4e}input[type=email],input[type=text],select{padding-bottom:3px;border:none;border-bottom:2px solid #4a4a4a;background:none}input[type=email],input[type=text]{width:100%}.m-search{position:relative}.m-search input{width:120px;border-color:#fff}.m-search__icon{display:inline-flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;width:30px;height:30px;color:#fff;cursor:pointer}.m-subscribe{height:50px;display:flex}.m-subscribe__input{height:100%;padding:0 10px;border:3px solid #b4ded4;background-color:#fff}.m-subscribe__btn{border:1px solid #b4ded4;background-color:#b4ded4}.m-slider{width:100%;overflow:hidden;margin-top:51px}@media screen and (min-width:768px){.m-slider{height:100vh;margin-top:0}}.m-slider .slick-list,.m-slider .slick-track{height:100%}.m-pageLoad{position:absolute;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;background-color:hsla(0,0%,100%,.9);z-index:1000}.m-pageLoad img{-webkit-animation:rotate 2s ease-out infinite;animation:rotate 2s ease-out infinite;width:70px}.m-breadcrumb{display:flex;flex-wrap:wrap;margin-top:15px}.m-breadcrumb__link{display:block;padding-right:15px}.m-breadcrumb__link:after{content:">";padding-left:10px}.m-breadcrumb__item:last-child .m-breadcrumb__link{padding-right:0}.m-breadcrumb__item:last-child .m-breadcrumb__link:after{content:"";padding-left:0}@media screen and (max-width:1199px){.mobile-layout{position:relative}.mobile-layout__content{position:absolute;top:0;height:100vh;overflow:auto;padding:55px 0 20px}.mobile-layout.s-intro .mobile-layout__content{background-color:hsla(0,0%,63.9%,.35)}}.m-langs{position:relative;margin-left:15px;padding-right:22px;cursor:pointer}@media screen and (max-width:991px){.m-langs{position:absolute;top:0;right:4px;bottom:unset;left:unset}}.m-langs img{width:25px}.m-langs__flags{position:absolute;top:38px;right:0;bottom:unset;left:unset;background-color:rgba(0,0,0,.7);display:none;padding:5px 10px;width:100px}@media screen and (min-width:992px){.m-langs__flags{left:-13px;right:unset}}.m-langs__flag{margin-bottom:8px;font-size:12px;color:#fff;text-transform:uppercase}.m-langs__flag.-open{display:block}.s-intro>div{height:100vh;overflow:auto}.s-intro__img{background-position:bottom;background-image:url(../images/placeholders/pen.jpg)}.s-intro__img,.s-introCards{background-size:cover;background-repeat:no-repeat}.s-introCards{display:flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;background-position:top;height:100vh;background-image:url(../images/placeholders/book.jpg)}.s-homeBlog{padding:40px 0;background-color:#b4ded4}@media screen and (min-width:1140px){.s-homeBlog{height:100vh}}.s-activities{position:relative}.s-activities .a-title__wrap{position:absolute;top:40px;right:unset;bottom:unset;left:50%;transform:translateX(-50%)}@media screen and (min-width:768px){.s-activities__item{margin-top:90px}}.s-activities__link:after{content:">"}.s-activities__bgImg{background-position:top;height:100vh}.s-activities__bgImg,.s-activities__emptyState{background-size:cover;background-repeat:no-repeat;z-index:-1;background-image:url(../images/placeholders/balloons.jpg)}.s-activities__emptyState{background-position:50%;height:400px;padding:20px}.s-activities__emptyState p{margin:100px auto 0}@media screen and (min-width:992px){.s-activities__emptyState p{width:50%}}.s-header{position:relative}.s-header.-inner{display:flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;padding:70px 7px 20px}@media screen and (min-width:768px){.s-header.-inner{min-height:250px;padding:40px 0}.s-header.-inner .a-title{color:#212529}.s-header.-inner .a-title:after{background-color:transparent}}.s-header.-blog{background-size:cover;background-position:50%;background-repeat:no-repeat;background-image:url(../images/placeholders/laptop.jpg)}.s-header.-post{min-height:unset;margin-top:25%;background-color:hsla(0,0%,100%,.8)}.footer__topRow{background-color:#a3a3a3;border-top:#4a4a4a;box-shadow:inset 7px -1px 41px -3px rgba(74,74,74,.7);padding:30px 0}.footer__title{margin-top:15px;color:#fff;font-size:22px}.footer__socialList{margin:0 -10px}.footer__bottomRow{background-color:#4a4a4a;padding:15px 0}.footer__bottomRow .container,.footer__bottomRow a{color:#fff}.footer__icon{font-size:30px;color:#fff;margin:0 10px}.footer__icon:hover{color:#b4ded4;text-decoration:none}.footer a:hover{color:#b4ded4}.footer__slider{overflow:hidden;width:70%;padding-top:15px}.s-offers{margin-top:0;background:#e6e5eb}.s-offers__heading{margin-top:35px}.s-offers__list{padding-left:35px}.s-offers__list li{list-style:disc;color:#db920b}.s-sidebar{position:relative;background-color:#fff;box-shadow:0 15px 10px rgba(0,0,0,.2);margin-top:50px;padding:20px 50px;border-left:5px solid #fdbb2d}@media screen and (max-width:767px){.s-sidebar{display:none}}.s-sidebar:after,.s-sidebar:before{position:absolute;left:10px;content:"";width:20px;height:20px;border-radius:50%;background-color:hsla(0,0%,63.9%,.5)}.s-sidebar:before{top:30%}.s-sidebar:after{top:60%}.s-sidebar__content{margin-top:20px}.s-sidebar__content li{margin-top:8px;padding-left:10px;border-bottom:1px solid hsla(0,0%,63.9%,.8)}.s-sidebar__content a{font-size:16px;transition:.3s}.s-sidebar__content a:hover{padding-left:10px}.s-blogPreview{display:block;margin-top:50px;background-color:#fff;box-shadow:0 15px 10px rgba(0,0,0,.2);color:#4a4a4a}.s-blogPreview__author,.s-blogPreview__date,.s-blogPreview__desc,.s-blogPreview h3{color:#4a4a4a}.s-blogPreview h3{font-weight:500}.s-blogPreview__img{background-size:cover;background-position:50%;background-repeat:no-repeat;height:350px;background-image:url(../images/doggo.jpg)}.s-blogPreview .a-link,.s-blogPreview__category{display:block;padding:5px 15px;background-color:#fdbb2d;font-weight:600;color:#fff}.s-blogPreview__info{padding:15px;background-color:#eee}.s-blogPreview__author,.s-blogPreview__date{display:inline-block;margin-top:10px}.s-blogPreview__author i,.s-blogPreview__date i{margin-right:5px}.s-blogPreview__author{margin-left:15px}.s-blogPreview__desc{display:-webkit-box;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden;padding:15px 15px 0;border-top:1px solid #a3a3a3;background-color:#fff}.s-blogPreview .a-link{width:160px;margin:20px 0 0 auto;border:1px solid #db920b;background-color:#db920b;transition:.3s}.s-blogPreview .a-link:hover{background-color:#fff;color:#db920b}.s-emptyState{display:flex;align-items:center;justify-content:center;flex-direction:column;flex-wrap:wrap;background-size:cover;background-position:top;background-repeat:no-repeat;padding:20px;height:500px;height:350px;background-image:url(../images/placeholders/empty_space.jpg);background-position:bottom}.s-emptyState a{color:#fdbb2d;transition:.3s}.s-emptyState a:hover{text-decoration:underline}@media screen and (min-width:768px){.s-emptyState{height:500px;padding:50px}}.page__content{margin-bottom:50px;padding:50px 0;background-color:hsla(0,0%,100%,.8)}.page.-inner{background-image:url(../images/placeholders/laptop.jpg)}.page.-about,.page.-inner{background-size:cover;background-position:50%;background-repeat:no-repeat}.page.-about{background-image:url(../images/placeholders/room.jpg)}.page.-about .main-content{padding-bottom:50px}.page.-blog{background-color:#b4ded4}.page.-blog .page__content{background-color:unset}.page.-singleEvent{background-image:url(../images/placeholders/event.jpg)}.p-post{position:relative;background-color:#e6e5eb}.p-post .page__content{padding:0}.p-post__postImg{position:absolute;z-index:-1}.p-post__header{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:wrap;padding:10px 40px;background-color:#b4ded4}.p-post__headerSocial a:hover{text-decoration:none}.p-post__headerSocial i{margin-left:10px;font-size:25px}.p-post .m-block{margin-top:0}.tac{text-align:center}.tar{text-align:right}.tal{text-align:left}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
