@-webkit-keyframes pulse{0%{transform:scale(.1);opacity:0}50%{opacity:1}to{transform:scale(1.2);opacity:0}}@keyframes pulse{0%{transform:scale(.1);opacity:0}50%{opacity:1}to{transform:scale(1.2);opacity:0}}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}@keyframes rotate{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}@-webkit-keyframes placeHolderShimmer{0%{background-position:-468px 0}to{background-position:468px 0}}@keyframes placeHolderShimmer{0%{background-position:-468px 0}to{background-position:468px 0}}@-webkit-keyframes searchFieldSlide{0%{width:205px}to{width:0}}@keyframes searchFieldSlide{0%{width:205px}to{width:0}}@font-face{font-family:OpenSans-Regular;src:url(../fonts/open-sans/OpenSans-Regular.ttf)}@font-face{font-family:handwritten;src:url(../fonts/Kalam/Kalam-Regular.ttf)}*,:after,:before{box-sizing:border-box}html{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:rgba(0,0,0,0)}@-ms-viewport{width:device-width}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-size:16px;font-weight:400;line-height:1.6;color:#000;text-align:left;background-color:#fff}[tabindex="-1"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}p{margin-top:0;margin-bottom:12px}ol,ul{margin:0;padding:0}b,strong{font-weight:bolder}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#000;text-decoration:none}img{vertical-align:middle;border-style:none;max-width:100%}svg:not(:root){overflow:hidden}table{border-collapse:collapse}th{text-align:inherit}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}[hidden]{display:none!important}button:focus,input:focus{outline:none}h1,h2,h3,h4,h5,h6{color:#000;font-weight:700;line-height:1.2;margin-top:0;margin-bottom:0}h1{font-size:25px;font-weight:500;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol}@media screen and (min-width:768px){h1{font-size:35px}}@media screen and (min-width:1200px){h1{font-size:35px}}h2{font-size:32px;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;color:#212529}@media screen and (min-width:768px){h2{font-size:32px}}@media screen and (min-width:1200px){h2{font-size:32px}}h3{font-size:28px;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;color:#212529;text-transform:none}@media screen and (min-width:768px){h3{font-size:28px}}@media screen and (min-width:1200px){h3{font-size:28px}}h4{font-size:23px;font-family:Open Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;color:#212529;text-transform:none}@media screen and (min-width:768px){h4{font-size:25px}}@media screen and (min-width:1200px){h4{font-size:25px}}h5{font-size:20px}@media screen and (min-width:768px){h5{font-size:20px}}@media screen and (min-width:1200px){h5{font-size:20px}}h6{font-size:16px}@media screen and (min-width:768px){h6{font-size:16px}}@media screen and (min-width:1200px){h6{font-size:16px}}small{font-size:80%;font-weight:400}a:hover{text-decoration:none}li{list-style:none}body{background-color:#f3f3f3;transition:.3s;color:#4a4a4a}.block-scroll{overflow:hidden}.main-content{padding-bottom:50px;background-image:url(../images/placeholders/background.jpg);background-repeat:no-repeat}@media screen and (min-width:768px){.main-content{padding:100px 0}}.header img{width:100%}input[type=email],input[type=text],select{padding-bottom:3px;border:none;border-bottom:2px solid #529149;background:none}input[type=email],input[type=text]{width:100%}.hide{display:none}.active,.d-block{display:block}@media screen and (max-width:767px){.hideOnMobile{display:none}}.active-flex{display:flex}a{transition:.3}a:hover{color:#fdbb2d}.c-pointer{cursor:pointer}.a-loader{position:fixed;top:0;right:0;bottom:0;left:0;z-index:10;background-color:rgba(0,0,0,.7)}.a-loader__circle{position:absolute;top:50%;right:unset;bottom:unset;left:50%;display:flex;justify-content:center;align-items:center;width:60px;height:60px;border-radius:50%;background-color:#000;transform:translate(-50%,-50%)}.a-loader__circle:after{-webkit-animation:pulse 2s ease-out infinite;animation:pulse 2s ease-out infinite;content:"";height:50px;width:50px;border-radius:50%;border:5px solid #fff;background:transparent;opacity:0}.a-overlay{position:absolute;top:0;right:0;bottom:0;left:0;background:rgba(0,0,0,.8);z-index:0}.a-title{position:relative;display:inline-block;font-family:handwritten;color:#212529}@media screen and (min-width:768px){.a-title:after,.a-title:before{content:"";width:85px;height:2px;background-color:rgba(253,187,45,.5);position:absolute;top:50%;left:-95px}.a-title:after{left:unset;right:-95px}}.a-title__wrap{text-align:center}.a-link{color:#4a4a4a;display:block;font-size:18px;transition:.3s}.a-link:hover{color:#fdbb2d}.a-link.-homeCutText{display:block;text-align:right}@media screen and (min-width:768px){.a-link.-homeCutText{display:none}}.a-link.-openLink{position:relative}.a-link.-openLink .material-icons{position:absolute;top:unset;right:-10px;bottom:-15px;left:unset;font-size:32px}.a-desc{margin-top:15px;font-size:17px;line-height:1.5}.a-desc.-homeCutText{display:-webkit-box;-webkit-line-clamp:8;-webkit-box-orient:vertical;overflow:hidden}@media screen and (min-width:768px){.a-desc.-homeCutText{-webkit-line-clamp:unset}}.a-date{background-color:#529149;border-radius:5px;padding:15px 30px;text-align:center}.a-date__num{color:#fff;display:block;font-size:30px;font-weight:700}.a-date__month{color:#fff;font-size:14px;text-transform:uppercase;display:block}@media screen and (max-width:767px){.a-date.-offset{position:absolute;top:-23px;display:inline-block;padding:10px 15px}.a-date.-offset .a-date__num{font-size:25px;line-height:1}}.a-video{width:100%;height:auto;margin-top:40px}@media screen and (min-width:768px){.a-video{height:600px}}.a-btn{display:block;padding:10px 5px;border-radius:5px;border:2px solid #fdbb2d;background:#fdbb2d;font-weight:700;text-align:center;color:#fff;transition:.3s}@media screen and (min-width:768px){.a-btn{padding:20px}}.a-btn:hover{background:hsla(0,0%,100%,.8);color:#fdbb2d}.a-btn.-formLink{margin-top:40px;font-size:20px}.a-btn.-smaller{margin-top:10px;padding:10px 20px}.a-btn.-secondary{border-color:#529149;background:#529149}.a-btn.-secondary:hover{border-color:transparent;background:rgba(82,145,73,.5);color:#fff}.a-closeIcon{position:absolute;top:5px;right:5px;width:30px;height:30px;cursor:pointer}.a-closeIcon:after,.a-closeIcon:before{position:absolute;top:0;right:0;content:"";width:20px;height:20px;border-bottom:2px solid #212529;transition:.3s}.a-closeIcon:before{transform:rotate(45deg)}.a-closeIcon:after{transform:rotate(-45deg);right:13px}.a-closeIcon:hover:after,.a-closeIcon:hover:before{border-bottom:2px solid #b04e4e}.a-burger{width:30px}.a-burger span{display:block;height:9px;border-bottom:2px solid #212529;transition:.3s}.a-burger.open span:first-child{transform:rotate(45deg)}.a-burger.open span:nth-child(2){position:relative;top:-9px;right:5px;transform:rotate(-45deg)}.a-burger.open span:last-child{display:none}@media screen and (min-width:768px){.a-burger{display:none}}.a-arrow{border:solid #000;border-width:0 3px 3px 0;display:inline-block}.a-toTopArrow{background-color:rgba(0,0,0,.5);position:fixed;bottom:15%;right:5px;display:none;width:50px;height:50px;border-radius:5px}.a-toTopArrow .a-arrow{position:absolute;top:20px;left:16px;width:20px;height:20px;border-color:#fdbb2d;transform:rotate(-135deg)}.m-block{background-color:#fff;box-shadow:0 15px 10px rgba(0,0,0,.2);margin-top:50px;padding:15px}.m-block:first-child{margin-top:0}@media screen and (min-width:768px){.m-block{padding:50px}}.m-card{padding:30px;box-shadow:0 15px 10px rgba(0,0,0,.2);text-align:center;background-color:rgba(253,187,45,.5)}.m-card__icon{height:24px}.m-card__title{margin:18px 0;display:block;font-size:16px;font-weight:600;color:#000;text-transform:uppercase}.m-card:nth-child(2){background-color:rgba(78,160,176,.5)}.m-card:nth-child(3){background-color:rgba(219,146,11,.5)}.m-card:nth-child(4){background-color:rgba(176,78,78,.5)}@media screen and (min-width:768px){.m-card{max-width:260px;margin:0 15px}}.m-card__wrap{display:flex;flex-wrap:wrap;margin:50px 0;background:#fff}.m-card__wrap.-members{align-items:flex-start;justify-content:space-around;background:none}.m-card__wrap.-members .m-card{max-width:350px;padding:30px 0 0;background-color:#fff}.m-card__wrap.-members .m-card>*{padding:5px 30px}.m-card__wrap.-members .m-card__contact,.m-card__wrap.-members .m-card__title{margin:20px 0 0;background-color:#fdbb2d;color:#fff;text-transform:none}.m-card__wrap.-members .m-card__name{display:block;padding:15px 30px;background-color:#eee}.m-card__wrap.-members .m-card__about,.m-card__wrap.-members .m-card__contact{padding:15px 30px;border-top:1px solid #a3a3a3}.m-card__wrap.-members .m-card__contact{margin-top:0}.m-card__wrap.-members .m-card__link{padding:15px;color:#fff;cursor:pointer}.m-card__wrap.-members .m-card__link:hover{color:#000}@media screen and (min-width:768px){.m-card__wrap{margin:50px -10px 0}}.m-activity{position:relative;margin-top:40px;padding-bottom:25px;border-bottom:1px solid #eee;background-color:#fff;cursor:pointer;transition:.3s}.m-activity:last-child{border-bottom:none}.m-activity:hover{text-decoration:none;box-shadow:0 15px 10px rgba(0,0,0,.2);transform:scale(1.05)}.m-activity.a-link:hover{color:#529149}.m-activity__img{width:auto;height:155px;overflow:hidden}.m-activity__img img{width:100%}.m-activity__text{padding:20px 10px 0}.m-activity__desc,.m-activity__title{color:#000}.m-activity .a-desc{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden}@media screen and (min-width:768px){.m-activity{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:nowrap;padding-bottom:40px}.m-activity__text{padding:0 40px}}.m-nav{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:wrap;position:relative;padding:20px 0;background:hsla(0,0%,100%,.6)}.m-nav__logo{max-width:180px}@media screen and (min-width:768px){.m-nav{background:none}}.m-nav .m-nav__wrap{display:flex;align-items:center;justify-content:space-between;flex-direction:row;flex-wrap:wrap}@media screen and (max-width:767px){.m-nav .m-nav__wrap{position:absolute;top:90px;right:0;bottom:unset;left:0;z-index:1;height:100vh;display:none;padding:20px 0;background:#fff;background:linear-gradient(0deg,#fdbb2d,#fff);text-align:center}.m-nav .m-nav__wrap .m-nav__list{flex-direction:column;align-items:center}.m-nav .m-nav__wrap .m-nav__list li{padding:5px 20px}}.m-nav__list{display:flex}.m-nav__list li{padding:0 20px;color:#4a4a4a}.m-nav__list .-active{border-bottom:1px dashed #fdbb2d;color:#212529}@media screen and (min-width:768px){.m-nav__list .-active{border-bottom:1px dashed #fdbb2d;color:#fdbb2d}}.m-search{position:relative}.m-search input{width:205px;border-color:#4a4a4a}.m-search__icon{display:inline-flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;width:30px;height:30px;cursor:pointer}.m-testimonials{margin-top:100px}.m-testimonials__item{position:relative;display:block;width:100%;height:auto;margin:50px auto 0;background:#fff;padding:60px 30px;border:5px dashed #529149;text-align:center;box-shadow:0 15px 10px rgba(0,0,0,.2)}.m-testimonials__item:before{background-size:cover;background-position:top;background-repeat:no-repeat;position:absolute;top:-40px;right:unset;bottom:unset;left:-16px;content:"";display:block;height:90px;width:60px;background-image:url(../images/icons/quote.svg);transform:rotateY(180deg)}@media screen and (min-width:768px){.m-testimonials__item{width:400px;height:350px}}.m-testimonials__user{display:block;margin:15px 0 20px;font-family:handwritten;font-size:25px;font-weight:700;color:#529149}.m-tab{display:flex;align-items:center;margin:0 -30px;border-bottom:1px solid rgba(253,187,45,.5);background:#fff}.m-tab__item{margin-left:20px;padding:10px 10px 5px;font-size:15px;cursor:pointer}.m-tab__item.-active{border-top-left-radius:5px;border-top-right-radius:5px;background:#fdbb2d;color:#fff}.m-tab__item:first-child{margin-left:0}@media screen and (min-width:768px){.m-tab{margin:unset}.m-tab__item{padding:10px 15px;font-size:20px}}.m-popup{position:fixed;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;display:none;padding:20px;background:hsla(0,0%,63.9%,.65)}.m-popup.-active{display:flex}.m-popup__box{width:100%;height:500px;overflow-y:auto;position:relative;padding:20px 10px;border:1px solid #529149;border-radius:10px;background-color:#fff}@media screen and (min-width:768px){.m-popup__box{width:unset;height:unset;padding:50px}}.m-form{display:flex;flex-wrap:wrap;flex-direction:column;max-width:700px}@media screen and (min-width:992px){.m-form{flex-direction:row}}.m-form>div{flex:1 1 0;margin:0 15px}.m-form__box{margin-top:25px}@media screen and (min-width:768px){.m-form__box{width:300px}}.m-form__box textarea{min-width:230px;width:100%}.m-form label{display:block}.m-form .-required:after{content:"(obavezno)";color:#b04e4e}.m-slider{width:100%;max-height:700px;overflow:hidden}.m-pageLoad{position:absolute;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;flex-direction:row;flex-wrap:wrap;background-color:hsla(0,0%,100%,.9)}.m-pageLoad img{-webkit-animation:rotate 2s ease-out infinite;animation:rotate 2s ease-out infinite;width:70px}.s-activities__item{margin-top:70px}.s-activities__item:first-child{margin-top:0}.s-activities__link:after{content:">"}.s-header{position:relative}.s-header.-inner{padding:20px 7px;background:#fff;background:linear-gradient(0deg,#fff,#fdbb2d)}.s-header.-inner .a-title{color:#fff}@media screen and (min-width:768px){.s-header.-inner{min-height:250px;padding:40px 0;background:transparent}.s-header.-inner .a-title__wrap{width:50%;margin:0 auto}.s-header.-inner .a-title{color:#212529}}.s-header__img{display:none}@media screen and (min-width:768px){.s-header__img{position:absolute;top:0;right:0;bottom:0;left:0;display:block;opacity:.8;background-image:url(../images/2019-08-09-020-500x300.jpg);background-repeat:no-repeat;background-size:100%;background-position-y:40%;filter:blur(8px);z-index:-1}.s-header__img.-classes{background-image:url(../images/placeholders/online.jpg)}.s-header__img.-blog{background-image:url(../images/placeholders/blog.jpg)}.s-header__img.-events{background-image:url(../images/placeholders/trip.jpg);background-position-y:80%}}.footer__topRow{background-color:#a3a3a3;border-top:#4a4a4a;box-shadow:inset 7px -1px 41px -3px rgba(74,74,74,.7);padding:30px 0}.footer__title{margin-top:15px;color:#fff;font-size:22px}.footer__bottomRow{background-color:#4a4a4a;padding:15px 0}.footer__bottomRow .container{color:#fff}.footer__icon{font-size:30px;color:#fff;margin:0 10px}.footer__icon :hover,.footer a:hover{color:#529149}.footer__slider{overflow:hidden;width:70%;padding-top:15px}.s-offers__heading{margin-top:35px}.s-offers__list{padding-left:35px}.s-offers__list li{list-style:disc;color:#db920b}.s-sidebar{position:relative;background-color:#fff;box-shadow:0 15px 10px rgba(0,0,0,.2);margin-top:50px;padding:20px 50px;border-left:5px solid #fdbb2d}@media screen and (max-width:767px){.s-sidebar{display:none}}.s-sidebar:after,.s-sidebar:before{position:absolute;left:10px;content:"";width:20px;height:20px;border-radius:50%;background-color:hsla(0,0%,63.9%,.5)}.s-sidebar:before{top:30%}.s-sidebar:after{top:60%}.s-sidebar__content{margin-top:20px}.s-sidebar__content li{margin-top:8px;padding-left:10px;border-bottom:1px solid hsla(0,0%,63.9%,.8)}.s-sidebar__content a{font-size:16px;transition:.3s}.s-sidebar__content a:hover{padding-left:10px}.s-blogPreview{display:block;margin-top:50px;background-color:#fff;box-shadow:0 15px 10px rgba(0,0,0,.2);color:#4a4a4a}.s-blogPreview__author,.s-blogPreview__date,.s-blogPreview__desc,.s-blogPreview h3{color:#4a4a4a}.s-blogPreview h3{font-weight:500}.s-blogPreview__img{background-size:cover;background-position:50%;background-repeat:no-repeat;height:350px;background-image:url(../images/doggo.jpg)}.s-blogPreview .a-link,.s-blogPreview__category{display:block;padding:5px 15px;background-color:#fdbb2d;font-weight:600;color:#fff}.s-blogPreview__info{padding:15px;background-color:#eee}.s-blogPreview__author,.s-blogPreview__date{display:inline-block;margin-top:10px}.s-blogPreview__author i,.s-blogPreview__date i{margin-right:5px}.s-blogPreview__author{margin-left:15px}.s-blogPreview__desc{display:-webkit-box;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden;padding:15px 15px 0;border-top:1px solid #a3a3a3;background-color:#fff}.s-blogPreview .a-link{width:160px;margin:20px 0 0 auto;border:1px solid #db920b;background-color:#db920b;transition:.3s}.s-blogPreview .a-link:hover{background-color:#fff;color:#db920b}.s-emptyState{display:flex;align-items:center;justify-content:center;flex-direction:column;flex-wrap:wrap;background-size:cover;background-position:top;background-repeat:no-repeat;padding:20px;height:500px;height:350px;background-image:url(../images/placeholders/empty_space.jpg);background-position:bottom}.s-emptyState a{color:#fdbb2d;transition:.3s}.s-emptyState a:hover{text-decoration:underline}@media screen and (min-width:768px){.s-emptyState{height:500px;padding:50px}}.tac{text-align:center}.tar{text-align:right}.tal{text-align:left}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
